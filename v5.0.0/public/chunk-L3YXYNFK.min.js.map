{
  "version": 3,
  "sources": ["../../node_modules/mermaid/dist/svgDrawCommon-f26cad39.js"],
  "sourcesContent": ["import { sanitizeUrl } from \"@braintree/sanitize-url\";\nconst drawRect = function(elem, rectData) {\n  const rectElem = elem.append(\"rect\");\n  rectElem.attr(\"x\", rectData.x);\n  rectElem.attr(\"y\", rectData.y);\n  rectElem.attr(\"fill\", rectData.fill);\n  rectElem.attr(\"stroke\", rectData.stroke);\n  rectElem.attr(\"width\", rectData.width);\n  rectElem.attr(\"height\", rectData.height);\n  rectElem.attr(\"rx\", rectData.rx);\n  rectElem.attr(\"ry\", rectData.ry);\n  if (rectData.attrs !== \"undefined\" && rectData.attrs !== null) {\n    for (let attrKey in rectData.attrs) {\n      rectElem.attr(attrKey, rectData.attrs[attrKey]);\n    }\n  }\n  if (rectData.class !== \"undefined\") {\n    rectElem.attr(\"class\", rectData.class);\n  }\n  return rectElem;\n};\nconst drawBackgroundRect = function(elem, bounds) {\n  const rectElem = drawRect(elem, {\n    x: bounds.startx,\n    y: bounds.starty,\n    width: bounds.stopx - bounds.startx,\n    height: bounds.stopy - bounds.starty,\n    fill: bounds.fill,\n    stroke: bounds.stroke,\n    class: \"rect\"\n  });\n  rectElem.lower();\n};\nconst drawText = function(elem, textData) {\n  const nText = textData.text.replace(/<br\\s*\\/?>/gi, \" \");\n  const textElem = elem.append(\"text\");\n  textElem.attr(\"x\", textData.x);\n  textElem.attr(\"y\", textData.y);\n  textElem.attr(\"class\", \"legend\");\n  textElem.style(\"text-anchor\", textData.anchor);\n  if (textData.class !== void 0) {\n    textElem.attr(\"class\", textData.class);\n  }\n  const span = textElem.append(\"tspan\");\n  span.attr(\"x\", textData.x + textData.textMargin * 2);\n  span.text(nText);\n  return textElem;\n};\nconst drawImage = function(elem, x, y, link) {\n  const imageElem = elem.append(\"image\");\n  imageElem.attr(\"x\", x);\n  imageElem.attr(\"y\", y);\n  var sanitizedLink = sanitizeUrl(link);\n  imageElem.attr(\"xlink:href\", sanitizedLink);\n};\nconst drawEmbeddedImage = function(elem, x, y, link) {\n  const imageElem = elem.append(\"use\");\n  imageElem.attr(\"x\", x);\n  imageElem.attr(\"y\", y);\n  const sanitizedLink = sanitizeUrl(link);\n  imageElem.attr(\"xlink:href\", \"#\" + sanitizedLink);\n};\nconst getNoteRect = function() {\n  return {\n    x: 0,\n    y: 0,\n    width: 100,\n    height: 100,\n    fill: \"#EDF2AE\",\n    stroke: \"#666\",\n    anchor: \"start\",\n    rx: 0,\n    ry: 0\n  };\n};\nconst getTextObj = function() {\n  return {\n    x: 0,\n    y: 0,\n    width: 100,\n    height: 100,\n    fill: void 0,\n    anchor: void 0,\n    \"text-anchor\": \"start\",\n    style: \"#666\",\n    textMargin: 0,\n    rx: 0,\n    ry: 0,\n    tspan: true,\n    valign: void 0\n  };\n};\nexport {\n  drawBackgroundRect as a,\n  drawEmbeddedImage as b,\n  drawImage as c,\n  drawRect as d,\n  getTextObj as e,\n  drawText as f,\n  getNoteRect as g\n};\n"],
  "mappings": "wFAAA,IAAAA,EAA4B,SACtBC,EAAW,SAASC,EAAMC,EAAU,CACxC,IAAMC,EAAWF,EAAK,OAAO,MAAM,EASnC,GARAE,EAAS,KAAK,IAAKD,EAAS,CAAC,EAC7BC,EAAS,KAAK,IAAKD,EAAS,CAAC,EAC7BC,EAAS,KAAK,OAAQD,EAAS,IAAI,EACnCC,EAAS,KAAK,SAAUD,EAAS,MAAM,EACvCC,EAAS,KAAK,QAASD,EAAS,KAAK,EACrCC,EAAS,KAAK,SAAUD,EAAS,MAAM,EACvCC,EAAS,KAAK,KAAMD,EAAS,EAAE,EAC/BC,EAAS,KAAK,KAAMD,EAAS,EAAE,EAC3BA,EAAS,QAAU,aAAeA,EAAS,QAAU,KACvD,QAASE,KAAWF,EAAS,MAC3BC,EAAS,KAAKC,EAASF,EAAS,MAAME,CAAO,CAAC,EAGlD,OAAIF,EAAS,QAAU,aACrBC,EAAS,KAAK,QAASD,EAAS,KAAK,EAEhCC,CACT,EACME,EAAqB,SAASJ,EAAMK,EAAQ,CAC/BN,EAASC,EAAM,CAC9B,EAAGK,EAAO,OACV,EAAGA,EAAO,OACV,MAAOA,EAAO,MAAQA,EAAO,OAC7B,OAAQA,EAAO,MAAQA,EAAO,OAC9B,KAAMA,EAAO,KACb,OAAQA,EAAO,OACf,MAAO,MACT,CAAC,EACQ,MAAM,CACjB,EACMC,EAAW,SAASN,EAAMO,EAAU,CACxC,IAAMC,EAAQD,EAAS,KAAK,QAAQ,eAAgB,GAAG,EACjDE,EAAWT,EAAK,OAAO,MAAM,EACnCS,EAAS,KAAK,IAAKF,EAAS,CAAC,EAC7BE,EAAS,KAAK,IAAKF,EAAS,CAAC,EAC7BE,EAAS,KAAK,QAAS,QAAQ,EAC/BA,EAAS,MAAM,cAAeF,EAAS,MAAM,EACzCA,EAAS,QAAU,QACrBE,EAAS,KAAK,QAASF,EAAS,KAAK,EAEvC,IAAMG,EAAOD,EAAS,OAAO,OAAO,EACpC,OAAAC,EAAK,KAAK,IAAKH,EAAS,EAAIA,EAAS,WAAa,CAAC,EACnDG,EAAK,KAAKF,CAAK,EACRC,CACT,EACME,EAAY,SAASX,EAAMY,EAAGC,EAAGC,EAAM,CAC3C,IAAMC,EAAYf,EAAK,OAAO,OAAO,EACrCe,EAAU,KAAK,IAAKH,CAAC,EACrBG,EAAU,KAAK,IAAKF,CAAC,EACrB,IAAIG,KAAgB,eAAYF,CAAI,EACpCC,EAAU,KAAK,aAAcC,CAAa,CAC5C,EACMC,EAAoB,SAASjB,EAAMY,EAAGC,EAAGC,EAAM,CACnD,IAAMC,EAAYf,EAAK,OAAO,KAAK,EACnCe,EAAU,KAAK,IAAKH,CAAC,EACrBG,EAAU,KAAK,IAAKF,CAAC,EACrB,IAAMG,KAAgB,eAAYF,CAAI,EACtCC,EAAU,KAAK,aAAc,IAAMC,CAAa,CAClD,EACME,EAAc,UAAW,CAC7B,MAAO,CACL,EAAG,EACH,EAAG,EACH,MAAO,IACP,OAAQ,IACR,KAAM,UACN,OAAQ,OACR,OAAQ,QACR,GAAI,EACJ,GAAI,CACN,CACF,EACMC,EAAa,UAAW,CAC5B,MAAO,CACL,EAAG,EACH,EAAG,EACH,MAAO,IACP,OAAQ,IACR,KAAM,OACN,OAAQ,OACR,cAAe,QACf,MAAO,OACP,WAAY,EACZ,GAAI,EACJ,GAAI,EACJ,MAAO,GACP,OAAQ,MACV,CACF",
  "names": ["import_sanitize_url", "drawRect", "elem", "rectData", "rectElem", "attrKey", "drawBackgroundRect", "bounds", "drawText", "textData", "nText", "textElem", "span", "drawImage", "x", "y", "link", "imageElem", "sanitizedLink", "drawEmbeddedImage", "getNoteRect", "getTextObj"]
}
